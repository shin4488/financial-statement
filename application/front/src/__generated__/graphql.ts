/* eslint-disable */
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
};

export type Bookmark = {
  documentId: Scalars['String']['input'];
  testArg: Scalars['Int']['input'];
  userId: Scalars['String']['input'];
};

export type Mutation = {
  __typename?: 'Mutation';
  sandboxTest?: Maybe<SandboxTestPayload>;
  /** An example field added by the generator */
  testField: Scalars['String']['output'];
};


export type MutationSandboxTestArgs = {
  input: SandboxTestInput;
};

export type Query = {
  __typename?: 'Query';
  /** Find SandboxTest by id */
  sandboxTests?: Maybe<Array<SandboxTest>>;
  /** An example field added by the generator */
  testField: Scalars['String']['output'];
};


export type QuerySandboxTestsArgs = {
  id: Scalars['ID']['input'];
};

/** this is Sandbox type to practice GraphQL */
export type SandboxTest = {
  __typename?: 'SandboxTest';
  id: Scalars['ID']['output'];
  rating?: Maybe<Scalars['Int']['output']>;
  subSandboxes?: Maybe<Array<SubSandboxTest>>;
  title?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated input type of SandboxTest */
export type SandboxTestInput = {
  attributes: Bookmark;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of SandboxTest. */
export type SandboxTestPayload = {
  __typename?: 'SandboxTestPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  sandboxTestaa: SandboxTest;
};

export type SubSandboxTest = {
  __typename?: 'SubSandboxTest';
  id: Scalars['ID']['output'];
  note?: Maybe<Scalars['String']['output']>;
};
